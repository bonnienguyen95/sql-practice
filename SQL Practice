---178. Rank Score - https://leetcode.com/problems/rank-scores/
SELECT Score, DENSE_RANK() OVER (ORDER BY Score DESC) AS Rank
FROM Scores;


---574. Winning Candidate - https://leetcode.com/problems/winning-candidate/
SELECT Name
FROM (
    SELECT v.CandidateID, c.Name, COUNT(*) AS total
    FROM Vote v
    LEFT JOIN Candidate c
    ON c.id = v.CandidateId
    GROUP BY v.CandidateID, c.Name
    ORDER BY total DESC)
WHERE ROWNUM = 1;


---1112. Highest Grade For Each Student - https://leetcode.com/problems/highest-grade-for-each-student/

SELECT student_id, course_id, grade
FROM (
    SELECT student_id, course_id, grade,
    RANK () OVER (PARTITION BY student_id ORDER BY course_id) AS course_rank
    FROM (
        SELECT student_id, course_id, grade,
        RANK() OVER (PARTITION BY student_id ORDER BY grade DESC) AS grade_rank
        FROM Enrollments)
        WHERE grade_rank = 1)
WHERE course_rank = 1;

---1393. Capital Gain/Loss - https://leetcode.com/problems/capital-gainloss/
SELECT stock_name,
SUM(CASE WHEN operation = 'Buy' THEN (-1)*price
ELSE price END) AS capital_gain_loss
FROM Stocks
GROUP BY stock_name;


---1440. Evaluate Boolean Expression - https://leetcode.com/problems/evaluate-boolean-expression/

SELECT e.left_operand, e.operator, e.right_operand,
CASE WHEN v1.value > v2.value AND e.operator = '>' THEN 'true'
     WHEN v1.value < v2.value AND e.operator = '<' THEN 'true'
     WHEN v1.value = v2.value AND e.operator = '=' THEN 'true'
     ELSE 'false' END AS value
FROM Expressions e
LEFT JOIN Variables v1
ON e.left_operand = v1.name
LEFT JOIN Variables v2
ON e.right_operand = v2.name;

